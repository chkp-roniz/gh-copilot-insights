name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            arch: amd64
            goos: linux
            goarch: amd64

          - os: ubuntu-latest
            arch: arm64
            goos: linux
            goarch: arm64

          - os: ubuntu-latest
            arch: 386
            goos: linux
            goarch: 386

          - os: ubuntu-latest
            arch: ppc64le
            goos: linux
            goarch: ppc64le

          - os: ubuntu-latest
            arch: s390x
            goos: linux
            goarch: s390x

          - os: windows-latest
            arch: amd64
            goos: windows
            goarch: amd64
            ext: .exe

          - os: windows-latest
            arch: 386
            goos: windows
            goarch: 386
            ext: .exe

          - os: macos-latest
            arch: amd64
            goos: darwin
            goarch: amd64

          - os: macos-latest
            arch: arm64
            goos: darwin
            goarch: arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'

      - name: Build
        shell: bash
        run: |
          OUTPUT="gh-copilot-insights-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}"
          echo "Building for ${{ matrix.goos }}-${{ matrix.goarch }}..."
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o $OUTPUT

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gh-copilot-insights-${{ matrix.goos }}-${{ matrix.goarch }}
          path: gh-copilot-insights-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}