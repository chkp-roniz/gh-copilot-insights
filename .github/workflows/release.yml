name: Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
      - dev

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: aix
            arch: ppc64
            runs-on: ubuntu-latest
          - os: android
            arch: 386
            runs-on: ubuntu-latest
          - os: android
            arch: amd64
            runs-on: ubuntu-latest
          - os: android
            arch: arm
            runs-on: ubuntu-latest
          - os: android
            arch: arm64
            runs-on: ubuntu-latest
          - os: darwin
            arch: amd64
            runs-on: macos-latest
          - os: darwin
            arch: arm64
            runs-on: macos-latest
          - os: dragonfly
            arch: amd64
            runs-on: ubuntu-latest
          - os: freebsd
            arch: 386
            runs-on: ubuntu-latest
          - os: freebsd
            arch: amd64
            runs-on: ubuntu-latest
          - os: freebsd
            arch: arm
            runs-on: ubuntu-latest
          - os: freebsd
            arch: arm64
            runs-on: ubuntu-latest
          - os: illumos
            arch: amd64
            runs-on: ubuntu-latest
          - os: ios
            arch: amd64
            runs-on: macos-latest
          - os: ios
            arch: arm64
            runs-on: macos-latest
          - os: js
            arch: wasm
            runs-on: ubuntu-latest
          - os: linux
            arch: 386
            runs-on: ubuntu-latest
          - os: linux
            arch: amd64
            runs-on: ubuntu-latest
          - os: linux
            arch: arm
            runs-on: ubuntu-latest
          - os: linux
            arch: arm64
            runs-on: ubuntu-latest
          - os: linux
            arch: mips
            runs-on: ubuntu-latest
          - os: linux
            arch: mips64
            runs-on: ubuntu-latest
          - os: linux
            arch: mips64le
            runs-on: ubuntu-latest
          - os: linux
            arch: mipsle
            runs-on: ubuntu-latest
          - os: linux
            arch: ppc64
            runs-on: ubuntu-latest
          - os: linux
            arch: ppc64le
            runs-on: ubuntu-latest
          - os: linux
            arch: riscv64
            runs-on: ubuntu-latest
          - os: linux
            arch: s390x
            runs-on: ubuntu-latest
          - os: netbsd
            arch: 386
            runs-on: ubuntu-latest
          - os: netbsd
            arch: amd64
            runs-on: ubuntu-latest
          - os: netbsd
            arch: arm
            runs-on: ubuntu-latest
          - os: netbsd
            arch: arm64
            runs-on: ubuntu-latest
          - os: openbsd
            arch: 386
            runs-on: ubuntu-latest
          - os: openbsd
            arch: amd64
            runs-on: ubuntu-latest
          - os: openbsd
            arch: arm
            runs-on: ubuntu-latest
          - os: openbsd
            arch: arm64
            runs-on: ubuntu-latest
          - os: openbsd
            arch: mips64
            runs-on: ubuntu-latest
          - os: plan9
            arch: 386
            runs-on: ubuntu-latest
          - os: plan9
            arch: amd64
            runs-on: ubuntu-latest
          - os: plan9
            arch: arm
            runs-on: ubuntu-latest
          - os: solaris
            arch: amd64
            runs-on: ubuntu-latest
          - os: windows
            arch: 386
            runs-on: windows-latest
          - os: windows
            arch: amd64
            runs-on: windows-latest
          - os: windows
            arch: arm
            runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'

      - name: Build binary
        run: |
          ext=""
          if [ "${{ matrix.os }}" == "windows" ]; then ext=".exe"; fi
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o gh-copilot-insights-${{ matrix.os }}-${{ matrix.arch }}$ext

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: gh-copilot-insights-${{ matrix.os }}-${{ matrix.arch }}
          path: gh-copilot-insights-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }}

  release:
    if: startsWith(github.ref, 'refs/tags/v') && github.event.repository.protected
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: gh-copilot-insights-${{ matrix.os }}-${{ matrix.arch }}
          path: .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            gh-copilot-insights-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}